# This workflow publishes a Minecraft Forge project on Github

name: Publish Github

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version that should be used to compile the code [8, 16, 17]'
        required: true
        type: number
      mod-name:
        description: 'The name that should be added to the title of the Release on Github'
        required: true
        type: string
      mod-id:
        description: 'The mod id that is part of the built jar file'
        required: true
        type: string
    secrets:
      github-token:
        description: 'Github token'
        required: true

jobs:
  publish:
    name: Publish Github
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get Version
        id: get_version
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github-token }}
          result-encoding: string
          script: |
            return '${{ github.ref }}'.replace('refs/tags/${{ inputs.version-prefix }}', '');

      - name: Download cached build (if any)
        id: download
        uses: actions/download-artifact@v5
        with:
          github-token: ${{ secrets.github-token }}
          name: gradle-build
          path: .
        continue-on-error: true

      - name: Setup Java ${{ inputs.java-version }}
        if: steps.download.outcome != 'success'
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Setup Gradle
        if: steps.download.outcome != 'success'
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true

      - name: Execute Gradle build
        if: steps.download.outcome != 'success'
        run: ./gradlew build --no-daemon --parallel

      - name: Get Changelog
        id: get_changelog
        run: |
          content=`cat ./CHANGELOG.md | sed '0,/^## \[${{ steps.get_version.outputs.result }}\]/d' | sed '/^## \[/,$d'`
          delimiter="$(openssl rand -hex 8)"
          echo "result<<$delimiter" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version-prefix }}${{ steps.get_version.outputs.result }}
          name: ${{ inputs.mod-name }} ${{ inputs.version-prefix }}${{ steps.get_version.outputs.result }}
          body: ${{ steps.get_changelog.outputs.result }}
          draft: false
          prerelease: false
          files: |
            forge/build/libs/*.jar
            neoforge/build/libs/*.jar
            fabric/build/libs/*.jar
          token: ${{ secrets.github-token }}
