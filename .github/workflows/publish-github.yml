# This workflow publishes a Minecraft Forge project on Github

name: Publish Github

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version that should be used to compile the code [8, 16, 17]'
        required: true
        type: number
      mod-name:
        description: 'The name that should be added to the title of the Release on Github'
        required: true
        type: string
      mod-id:
        description: 'The mod id that is part of the built jar file'
        required: true
        type: string
    secrets:
      github-token:
        description: 'Github token'
        required: true

jobs:
  publish:
    name: Publish Github
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Cache MC Assets
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get Version
        id: get_version
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{ secrets.github-token }}
          result-encoding: string
          script: |
            return '${{ github.ref }}'.replace('refs/tags/', '');

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
        with:
          tag_name: ${{ steps.get_version.outputs.result }}
          release_name: ${{ inputs.mod-name }} ${{ steps.get_version.outputs.result }}
          body: |
            [This was an automatic build]
            // todo: add changelog
          draft: true
          prerelease: false

      - name: Upload Main Jar
        id: upload_main_jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/${{ inputs.mod-id }}-${{ steps.get_version.outputs.result }}.jar
          asset_name: ${{ inputs.mod-id }}-${{ steps.get_version.outputs.result }}.jar
          asset_content_type: application/java-archive
