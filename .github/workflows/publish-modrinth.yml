# This workflow publishes a Minecraft Forge project on Modrinth

name: Publish Modrinth

on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version that should be used to compile the code [8, 16, 17]'
        required: true
        type: number
      subproject:
        description: 'If a build is made in a subproject, this value should contain the name of that subproject'
        required: false
        type: string
        default: ''
      modrinth-id:
        description: 'The Modrinth project id'
        required: true
        type: string
      game-versions:
        description: 'A list of supported Minecraft versions'
        required: false
        type: string
        default: ${undefined}
      release-type:
        description: 'The release type of the version [alpha, beta, release]'
        required: false
        type: string
        default: release
      version-prefix:
        description: 'If the versions have a prefix like "forge-", it can be added here.'
        required: false
        type: string
        default: ''
      title-prefix:
        description: 'Adds a string to the beginning of the release title, which otherwise only contains the version.'
        required: false
        type: string
        default: ''
      loaders:
        description: 'A list of supported loaders'
        required: false
        type: string
        default: forge
    secrets:
      github-token:
        description: 'Github token'
        required: true
      modrinth-token:
        description: 'Modrinth token'
        required: true

jobs:
  publish:
    name: Publish Modrinth
    runs-on: ubuntu-latest
    permissions:
      actions: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github-token }}
          result-encoding: string
          script: |
            return '${{ github.ref }}'.replace('refs/tags/${{ inputs.version-prefix }}', '');

      - name: Setup Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ inputs.subproject != '' && format('{0}:build', inputs.subproject) || 'build' }}

      - name: Get Changelog
        id: get_changelog
        run: |
          content=`cat ./CHANGELOG.md | sed '0,/^## \[${{ steps.get_version.outputs.result }}\]/d' | sed '/^## \[/,$d'`
          delimiter="$(openssl rand -hex 8)"
          echo "result<<$delimiter" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Create Modrinth Release
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          modrinth-id: ${{ inputs.modrinth-id }}
          modrinth-token: ${{ secrets.modrinth-token }}
          modrinth-featured: false
          files: |
            ${{ inputs.subproject }}/build/libs/!(*-@(api|sources|javadoc)).jar
            ${{ inputs.subproject }}/build/libs/*-@(api|sources|javadoc).jar
          name: ${{ inputs.title-prefix }}${{ steps.get_version.outputs.result }}
          game-versions: ${{ inputs.game-versions }}
          version: ${{ inputs.version-prefix }}${{ steps.get_version.outputs.result }}
          version-type: ${{ inputs.release-type }}
          loaders: ${{ inputs.loaders }}
          changelog: ${{ steps.get_changelog.outputs.result }}
